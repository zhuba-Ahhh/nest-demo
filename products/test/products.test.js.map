{"version":3,"sources":["../../../src/products/test/products.test.ts"],"sourcesContent":["import { beforeEach, describe, expect, it, vi, vitest } from 'vitest';\nimport { ProductsController } from '../products.controller';\nimport { ProductsService } from '../products.service';\nimport { Products } from '../products.entity';\nimport { Repository } from 'typeorm';\n\ntype productsRepository = Repository<Products>;\n// 模拟 ProductsService\nclass MockProductsService implements Partial<ProductsService> {\n  productsRepository = vi.mocked<productsRepository>; // 模拟 ProductsRepository\n\n  getList = vi.fn().mockResolvedValue([]);\n  getProductById = vi.fn().mockResolvedValue(new Products());\n  addProduct = vi.fn().mockResolvedValue({});\n  delProuct = vi.fn().mockResolvedValue({});\n}\n\ndescribe('ProductsController', () => {\n  let controller: ProductsController;\n  let service: MockProductsService;\n\n  beforeEach(() => {\n    service = new MockProductsService();\n    controller = new ProductsController(service as any);\n  });\n\n  describe('getList', () => {\n    it('should call the service getList method', async () => {\n      await controller.getList();\n\n      expect(service.getList).toHaveBeenCalled();\n    });\n  });\n\n  describe('getProductId', () => {\n    it('should call the service getProductById method with the correct id', async () => {\n      const mockId = 2;\n      service.getProductById = vitest.fn().mockResolvedValue(new Products());\n\n      await controller.getProductId({ id: mockId });\n\n      expect(service.getProductById).toHaveBeenCalledWith(mockId);\n    });\n  });\n});\n"],"names":["MockProductsService","productsRepository","vi","mocked","getList","fn","mockResolvedValue","getProductById","Products","addProduct","delProuct","describe","controller","service","beforeEach","ProductsController","it","expect","toHaveBeenCalled","mockId","vitest","getProductId","id","toHaveBeenCalledWith"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;wBAA6D;oCAC1B;gCAEV;AAIzB,qBAAqB;AACrB,IAAA,AAAMA,sBAAN,MAAMA;;aACJC,qBAAqBC,UAAE,CAACC,MAAM,CAAsB,wBAAwB;;aAE5EC,UAAUF,UAAE,CAACG,EAAE,GAAGC,iBAAiB,CAAC,EAAE;aACtCC,iBAAiBL,UAAE,CAACG,EAAE,GAAGC,iBAAiB,CAAC,IAAIE,wBAAQ;aACvDC,aAAaP,UAAE,CAACG,EAAE,GAAGC,iBAAiB,CAAC,CAAC;aACxCI,YAAYR,UAAE,CAACG,EAAE,GAAGC,iBAAiB,CAAC,CAAC;;AACzC;AAEAK,IAAAA,gBAAQ,EAAC,sBAAsB;IAC7B,IAAIC;IACJ,IAAIC;IAEJC,IAAAA,kBAAU,EAAC;QACTD,UAAU,IAAIb;QACdY,aAAa,IAAIG,sCAAkB,CAACF;IACtC;IAEAF,IAAAA,gBAAQ,EAAC,WAAW;QAClBK,IAAAA,UAAE,EAAC,0CAA0C;YAC3C,MAAMJ,WAAWR,OAAO;YAExBa,IAAAA,cAAM,EAACJ,QAAQT,OAAO,EAAEc,gBAAgB;QAC1C;IACF;IAEAP,IAAAA,gBAAQ,EAAC,gBAAgB;QACvBK,IAAAA,UAAE,EAAC,qEAAqE;YACtE,MAAMG,SAAS;YACfN,QAAQN,cAAc,GAAGa,cAAM,CAACf,EAAE,GAAGC,iBAAiB,CAAC,IAAIE,wBAAQ;YAEnE,MAAMI,WAAWS,YAAY,CAAC;gBAAEC,IAAIH;YAAO;YAE3CF,IAAAA,cAAM,EAACJ,QAAQN,cAAc,EAAEgB,oBAAoB,CAACJ;QACtD;IACF;AACF"}