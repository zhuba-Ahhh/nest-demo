{"version":3,"sources":["../../../src/auth/guards/access-token.guard.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n// src/auth/guards/access-token.guard.ts\nimport {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { Reflector } from '@nestjs/core';\nimport { REQUEST_USER_KEY } from '../../constants';\nimport jwtConfig from '../../config/jwt.config';\nimport { IS_PUBLIC_KEY } from '../../common/decorators/public.decorator';\nimport { ResultDto } from 'src/utils/result.dto';\n\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly jwtService: JwtService,\n    @Inject(jwtConfig.KEY)\n    private readonly jwtConfiguration: ConfigType<typeof jwtConfig>,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const isPublic = this.reflector.get(IS_PUBLIC_KEY, context.getHandler());\n    if (isPublic) return true;\n    else {\n      const request = context.switchToHttp().getRequest();\n      const token = this.extractTokenFromHeader(request);\n      if (!token) throw new UnauthorizedException('暂无权限');\n\n      try {\n        const payload = await this.jwtService.verifyAsync(\n          token,\n          this.jwtConfiguration,\n        );\n        request[REQUEST_USER_KEY] = payload;\n      } catch (error) {\n        throw new UnauthorizedException('系统错误');\n      }\n      return true;\n    }\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n}\n"],"names":["AccessTokenGuard","canActivate","context","isPublic","reflector","get","IS_PUBLIC_KEY","getHandler","request","switchToHttp","getRequest","token","extractTokenFromHeader","UnauthorizedException","payload","jwtService","verifyAsync","jwtConfiguration","REQUEST_USER_KEY","error","_","headers","authorization","split","constructor","Injectable","Inject","jwtConfig","KEY"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,oDAAoD,GACpD,wCAAwC;;;;;+BAkB3BA;;;eAAAA;;;wBAXN;wBACoB;qBACA;sBAED;2BACO;kEACX;iCACQ;;;;;;;;;;;;;;;;;;;;AAIvB,IAAA,AAAMA,mBAAN,MAAMA;IAQX,MAAMC,YAAYC,OAAyB,EAAoB;QAC7D,MAAMC,WAAW,IAAI,CAACC,SAAS,CAACC,GAAG,CAACC,8BAAa,EAAEJ,QAAQK,UAAU;QACrE,IAAIJ,UAAU,OAAO;aAChB;YACH,MAAMK,UAAUN,QAAQO,YAAY,GAAGC,UAAU;YACjD,MAAMC,QAAQ,IAAI,CAACC,sBAAsB,CAACJ;YAC1C,IAAI,CAACG,OAAO,MAAM,IAAIE,6BAAqB,CAAC;YAE5C,IAAI;gBACF,MAAMC,UAAU,MAAM,IAAI,CAACC,UAAU,CAACC,WAAW,CAC/CL,OACA,IAAI,CAACM,gBAAgB;gBAEvBT,OAAO,CAACU,2BAAgB,CAAC,GAAGJ;YAC9B,EAAE,OAAOK,OAAO;gBACd,MAAM,IAAIN,6BAAqB,CAAC;YAClC;YACA,OAAO;QACT;IACF;IAEQD,uBAAuBJ,OAAgB,EAAsB;QACnE,MAAM,CAACY,GAAGT,MAAM,GAAGH,QAAQa,OAAO,CAACC,aAAa,EAAEC,MAAM,QAAQ,EAAE;QAClE,OAAOZ;IACT;IA/BAa,YACE,AAAiBpB,SAAoB,EACrC,AAAiBW,UAAsB,EACvC,AACiBE,gBAA8C,CAC/D;aAJiBb,YAAAA;aACAW,aAAAA;aAEAE,mBAAAA;IAChB;AA2BL;AAjCajB;IADZyB,IAAAA,kBAAU;IAKNC,aAAAA,IAAAA,cAAM,EAACC,kBAAS,CAACC,GAAG;;;eAFO,eAAS,4BAAT,eAAS;eACR,eAAU,4BAAV,eAAU;eAEJ,kBAAU,4BAAV,kBAAU;;GALpC5B"}