{"version":3,"sources":["../../src/products/products.service.ts"],"sourcesContent":["// products.service.ts\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Products } from './products.entity';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectRepository(Products)\n    private readonly productsRepository: Repository<Products>,\n  ) {}\n  // 查询数据库产品数据\n  async getList(): Promise<Products[]> {\n    Logger.log('getList');\n    return await this.productsRepository.query('select * from products');\n  }\n  async getProductById(id: number): Promise<any> {\n    try {\n      const res = await this.productsRepository.findOne({ where: { id: id } });\n      return {\n        code: 200,\n        data: res,\n        message: '查询成功',\n      };\n    } catch (error) {\n      return {\n        code: 500,\n        message: '查询失败',\n      };\n    }\n  }\n  async addProduct(installData: any): Promise<object> {\n    try {\n      await this.productsRepository.insert(installData);\n      Logger.log('addProduct');\n      return {\n        code: 200,\n        data: null,\n        message: '新增成功',\n      };\n    } catch (error) {\n      return {\n        code: 500,\n        data: null,\n        message: error.message,\n      };\n    }\n  }\n  async delProuct(id: number): Promise<object> {\n    try {\n      await this.productsRepository.delete(id);\n      Logger.log('delProuct');\n      return {\n        code: 200,\n        data: null,\n        message: '删除成功',\n      };\n    } catch (error) {\n      return {\n        code: 200,\n        data: null,\n        message: error.message,\n      };\n    }\n  }\n}\n"],"names":["ProductsService","getList","Logger","log","productsRepository","query","getProductById","id","res","findOne","where","code","data","message","error","addProduct","installData","insert","delProuct","delete","constructor","Injectable","InjectRepository","Products"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,sBAAsB;;;;;+BAOTA;;;eAAAA;;;wBANsB;yBACF;0BACN;gCACF;;;;;;;;;;;;;;;AAGlB,IAAA,AAAMA,kBAAN,MAAMA;IAKX,YAAY;IACZ,MAAMC,UAA+B;QACnCC,cAAM,CAACC,GAAG,CAAC;QACX,OAAO,MAAM,IAAI,CAACC,kBAAkB,CAACC,KAAK,CAAC;IAC7C;IACA,MAAMC,eAAeC,EAAU,EAAgB;QAC7C,IAAI;YACF,MAAMC,MAAM,MAAM,IAAI,CAACJ,kBAAkB,CAACK,OAAO,CAAC;gBAAEC,OAAO;oBAAEH,IAAIA;gBAAG;YAAE;YACtE,OAAO;gBACLI,MAAM;gBACNC,MAAMJ;gBACNK,SAAS;YACX;QACF,EAAE,OAAOC,OAAO;YACd,OAAO;gBACLH,MAAM;gBACNE,SAAS;YACX;QACF;IACF;IACA,MAAME,WAAWC,WAAgB,EAAmB;QAClD,IAAI;YACF,MAAM,IAAI,CAACZ,kBAAkB,CAACa,MAAM,CAACD;YACrCd,cAAM,CAACC,GAAG,CAAC;YACX,OAAO;gBACLQ,MAAM;gBACNC,MAAM;gBACNC,SAAS;YACX;QACF,EAAE,OAAOC,OAAO;YACd,OAAO;gBACLH,MAAM;gBACNC,MAAM;gBACNC,SAASC,MAAMD,OAAO;YACxB;QACF;IACF;IACA,MAAMK,UAAUX,EAAU,EAAmB;QAC3C,IAAI;YACF,MAAM,IAAI,CAACH,kBAAkB,CAACe,MAAM,CAACZ;YACrCL,cAAM,CAACC,GAAG,CAAC;YACX,OAAO;gBACLQ,MAAM;gBACNC,MAAM;gBACNC,SAAS;YACX;QACF,EAAE,OAAOC,OAAO;YACd,OAAO;gBACLH,MAAM;gBACNC,MAAM;gBACNC,SAASC,MAAMD,OAAO;YACxB;QACF;IACF;IAzDAO,YACE,AACiBhB,kBAAwC,CACzD;aADiBA,qBAAAA;IAChB;AAuDL;AA3DaJ;IADZqB,IAAAA,kBAAU;IAGNC,aAAAA,IAAAA,yBAAgB,EAACC,wBAAQ;;;eACW,oBAAU,4BAAV,oBAAU;;GAHtCvB"}