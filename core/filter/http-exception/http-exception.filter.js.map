{"version":3,"sources":["../../../../src/core/filter/http-exception/http-exception.filter.ts"],"sourcesContent":["import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp(); // 获取请求上下文\n    const response = ctx.getResponse(); // 获取请求上下文中的 response对象\n    const status = exception.getStatus(); // 获取异常状态码\n\n    // 设置错误信息\n    const message = exception.message\n      ? exception.message\n      : `${status >= 500 ? 'Service Error' : 'Client Error'}`;\n    const errorResponse = {\n      data: {},\n      message: message,\n      code: -1,\n    };\n\n    // 设置返回的状态码， 请求头，发送错误信息\n    response.status(status);\n    response.header('Content-Type', 'application/json; charset=utf-8');\n    response.send(errorResponse);\n  }\n}\n"],"names":["HttpExceptionFilter","catch","exception","host","ctx","switchToHttp","response","getResponse","status","getStatus","message","errorResponse","data","code","header","send","Catch","HttpException"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAQaA;;;eAAAA;;;wBAHN;;;;;;;AAGA,IAAA,AAAMA,sBAAN,MAAMA;IACXC,MAAMC,SAAwB,EAAEC,IAAmB,EAAE;QACnD,MAAMC,MAAMD,KAAKE,YAAY,IAAI,UAAU;QAC3C,MAAMC,WAAWF,IAAIG,WAAW,IAAI,uBAAuB;QAC3D,MAAMC,SAASN,UAAUO,SAAS,IAAI,UAAU;QAEhD,SAAS;QACT,MAAMC,UAAUR,UAAUQ,OAAO,GAC7BR,UAAUQ,OAAO,GACjB,CAAC,EAAEF,UAAU,MAAM,kBAAkB,eAAe,CAAC;QACzD,MAAMG,gBAAgB;YACpBC,MAAM,CAAC;YACPF,SAASA;YACTG,MAAM,CAAC;QACT;QAEA,uBAAuB;QACvBP,SAASE,MAAM,CAACA;QAChBF,SAASQ,MAAM,CAAC,gBAAgB;QAChCR,SAASS,IAAI,CAACJ;IAChB;AACF;AArBaX;IADZgB,IAAAA,aAAK,EAACC,qBAAa;GACPjB"}