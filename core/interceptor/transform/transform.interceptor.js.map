{"version":3,"sources":["../../../../src/core/interceptor/transform/transform.interceptor.ts"],"sourcesContent":["import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    return next.handle().pipe(\n      map((data) => {\n        return {\n          data,\n          code: 0,\n          msg: '请求成功',\n        };\n      }),\n    );\n  }\n}\n"],"names":["TransformInterceptor","intercept","context","next","handle","pipe","map","data","code","msg","Injectable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BASaA;;;eAAAA;;;wBAJN;sBACyB;;;;;;;AAGzB,IAAA,AAAMA,uBAAN,MAAMA;IACXC,UAAUC,OAAyB,EAAEC,IAAiB,EAAmB;QACvE,OAAOA,KAAKC,MAAM,GAAGC,IAAI,CACvBC,IAAAA,SAAG,EAAC,CAACC;YACH,OAAO;gBACLA;gBACAC,MAAM;gBACNC,KAAK;YACP;QACF;IAEJ;AACF;AAZaT;IADZU,IAAAA,kBAAU;GACEV"}